---

- name: "Create {{ storage.gv }} Brick Path"
  file:
    path:  "/var/lib/blocks/{{ storage.bricks | default('volume1') }}/{{ storage.gv }}"
    state: "directory"

- name: "Create {{ storage.gv }} Gluster Volume"
  gluster_volume:
    state: present
    name: "{{ storage.gv }}"
    bricks: "/var/lib/blocks/{{ storage.bricks | default('volume1') }}/{{ storage.gv }}"
    host: "{{ ansible_hostname }}"
    replicas: "{{ groups['all'] | length }}"
    cluster:
      "{{ groups['all'] }}"
  run_once: true
  when: (groups['all'] | length) > 1

- name: "Create {{ storage.gv }} Gluster Volume"
  gluster_volume:
    state: present
    name: "{{ storage.gv }}"
    bricks: "/var/lib/blocks/{{ storage.bricks | default('volume1') }}/{{ storage.gv }}"
    host: "{{ ansible_hostname }}"
    cluster:
      "{{ groups['all'] }}"
  run_once: true
  when: (groups['all'] | length) == 1

- include_tasks: "mnt.yml"
  with_items:
    - what:    "{{ inventory_hostname }}:/{{ storage.gv }}"
      where:   "{{ storage.mnt | default('/' + (storage.bricks | default('volume1')) + '/' + storage.gv) }}"
      type:    "glusterfs"
      wants:
        - gluster.service
      after:
        - gluster.service
  loop_control:
    loop_var: mnt
